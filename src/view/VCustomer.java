package view;

import java.sql.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import controller.CCustomer;
import java.awt.Color;
import model.DBConnection;
import model.MCustomer;

/**
 *
 * @author Owner
 */
public class VCustomer extends javax.swing.JFrame {

    private CCustomer controller;

    /**
     * Creates new form Customer
     */
    public VCustomer() {
        this.controller = new CCustomer();
        initComponents();
        loadCustomerData();
        setBounds(260, 120, 755, 430);
        getContentPane().setBackground(new Color(30, 30, 30));
        customertable.fixTable(jScrollPane);
        customertable.setColumnAlignment(0, JLabel.CENTER);
        customertable.setCellAlignment(0, JLabel.CENTER);
        customertable.setColumnAlignment(2, JLabel.CENTER);
        customertable.setCellAlignment(2, JLabel.CENTER);
        customertable.setColumnAlignment(4, JLabel.RIGHT);
        customertable.setCellAlignment(4, JLabel.RIGHT);
        customertable.setColumnWidth(0, 50);
        customertable.setColumnWidth(2, 100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtcontact = new javax.swing.JTextField();
        txtaddress = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtCustomerID = new javax.swing.JTextField();
        txtSearchID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        customertable = new eadcw.TableDark();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 51));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnupdate.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnupdate.setForeground(new java.awt.Color(237, 51, 5));
        btnupdate.setText("Update");
        btnupdate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 90, 30));

        btndelete.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btndelete.setForeground(new java.awt.Color(237, 51, 5));
        btndelete.setText("Delete");
        btndelete.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 180, 90, 30));

        btnrefresh.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnrefresh.setForeground(new java.awt.Color(237, 51, 5));
        btnrefresh.setText("Refresh");
        btnrefresh.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btnrefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 90, 30));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eadcw/back-button (1).png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, -1));

        btnadd.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnadd.setForeground(new java.awt.Color(237, 51, 5));
        btnadd.setText("Add");
        btnadd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        getContentPane().add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 90, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("CUSTOMER INFORMATION");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        txtname.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 160, 20));

        txtcontact.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        txtcontact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcontactActionPerformed(evt);
            }
        });
        getContentPane().add(txtcontact, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 60, 160, 20));

        txtaddress.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        txtaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddressActionPerformed(evt);
            }
        });
        getContentPane().add(txtaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 160, 20));

        txtemail.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 160, 20));

        txtCustomerID.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 51, 5), 1, true));
        txtCustomerID.setSelectionColor(new java.awt.Color(237, 51, 5));
        txtCustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtCustomerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 160, 20));

        txtSearchID.setBackground(new java.awt.Color(237, 64, 7));
        txtSearchID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtSearchID.setForeground(new java.awt.Color(255, 255, 255));
        txtSearchID.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(237, 64, 7), 1, true));
        txtSearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtSearchID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 90, 20));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search by ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(237, 64, 7));
        jLabel2.setText("Contact");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(237, 64, 7));
        jLabel3.setText("Email");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(237, 64, 7));
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(237, 64, 7));
        jLabel5.setText("Address");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(237, 64, 7));
        jLabel8.setText("Customer ID");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 580, 170));

        customertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Name", "Contact", "Address", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(customertable);

        getContentPane().add(jScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 650, 130));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eadcw/6.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 741, 393));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        String id = txtSearchID.getText().trim();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a customer ID", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            int customerId = Integer.parseInt(id);
            Statement st = DBConnection.createDBConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM Customer WHERE CustomerID = " + customerId);

            if (rs.next()) {
                String name = txtname.getText();
                String address = txtaddress.getText();
                String contact = txtcontact.getText();
                String email = txtemail.getText();

                // Check if any required fields are empty
                if (name.isEmpty() || address.isEmpty() || contact.isEmpty() || email.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "All fields must be filled", "Validation Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                CCustomer ccus = new CCustomer();
                ccus.updateCustomer(customerId, name, contact, address, email);

                clearFields();
                txtname.requestFocus();
                loadCustomerData();
                btnadd.setEnabled(true);

                JOptionPane.showMessageDialog(this, "Customer updated successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Customer not found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid customer ID", "Validation Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        String id = txtSearchID.getText().trim();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a customer ID", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int customerId = Integer.parseInt(id);
            Statement st = DBConnection.createDBConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM Customer WHERE CustomerID = " + customerId);

            if (rs.next()) {
                MCustomer mcus = new MCustomer();
                mcus.deleteCustomer(customerId);

                clearFields();
                loadCustomerData();
                btnadd.setEnabled(true);

                JOptionPane.showMessageDialog(this, "Customer deleted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Customer not found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid customer ID", "Validation Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void txtcontactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcontactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcontactActionPerformed

    private void txtaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddressActionPerformed

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        loadCustomerData();
    }//GEN-LAST:event_btnrefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Dashboard dbForm = new Dashboard();
        dbForm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        int customerID = Integer.parseInt(txtCustomerID.getText());
        String name = txtname.getText();
        String contact = txtcontact.getText();
        String address = txtaddress.getText();
        String email = txtemail.getText();

        CCustomer ccus = new CCustomer();
        ccus.addCustomer(customerID, name, contact, address, email);
    }//GEN-LAST:event_btnaddActionPerformed

    private void txtCustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerIDActionPerformed

    private void txtSearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchIDActionPerformed
        String id = txtSearchID.getText().trim();

        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a customer ID", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int customerId = Integer.parseInt(id);
            MCustomer mcus = new MCustomer();
            ResultSet rs = mcus.searchCustomerById(customerId);

            if (rs.next()) {
                txtname.setText(rs.getString("Name"));
                txtaddress.setText(rs.getString("Address"));
                txtcontact.setText(rs.getString("ContactNumber"));
                txtemail.setText(rs.getString("Email"));
                btnadd.setEnabled(false); // Disable add button to prevent adding duplicate entries
            } else {
                JOptionPane.showMessageDialog(this, "Customer not found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid customer ID", "Validation Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSearchIDActionPerformed

    CCustomer ccus = new CCustomer();

    private void loadCustomerData() {
        DefaultTableModel model = (DefaultTableModel) customertable.getModel();
        ccus.loadCustomer(model);
    }

    private void btnCheckCustomerActionPerformed(java.awt.event.ActionEvent evt) {
        String customerID = txtCustomerID.getText().trim();

        if (customerID.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a Customer ID", "Validation Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        CCustomer ccus = new CCustomer();
        ccus.checkCustomerExists(customerID);

        JOptionPane.showMessageDialog(this, "Check the console for the result of the operation.");
    }

    private void clearFields() {
        txtCustomerID.setText("");
        txtname.setText("");
        txtcontact.setText("");
        txtaddress.setText("");
        txtemail.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JButton btnupdate;
    private eadcw.TableDark customertable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtSearchID;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtcontact;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
}
